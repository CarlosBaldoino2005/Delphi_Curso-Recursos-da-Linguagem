unit View.Loading;

interface

type
  TLoadingProgress = procedure ( aValue : Integer ) of Object;

  TLoading = class
    private
    FOnLoadingProgress: TLoadingProgress;
    procedure SetOnLoadingProgress(const Value: TLoadingProgress);
    public
      procedure Preencher;
      property OnLoadingProgress : TLoadingProgress read FOnLoadingProgress write SetOnLoadingProgress;
  end;

implementation

uses
  System.SysUtils;

{ TLoading }

procedure TLoading.Preencher;
var
  I: Integer;
begin
  for I := 1 to 100 do
  begin
    Sleep(10);
    if Assigned(FOnLoadingProgress) then
      FOnLoadingProgress(I);
  end;
end;

procedure TLoading.SetOnLoadingProgress(const Value: TLoadingProgress);
begin
  FOnLoadingProgress := Value;
end;

end.
